From fe5002166b5b5b0c1ebc60045521b01b695109de Mon Sep 17 00:00:00 2001
From: kevall474 <kevall474@tuta.io>
Date: Sat, 22 May 2021 21:19:33 +0000
Subject: [PATCH] enable more optimization flags

---
 Makefile     |  8 ++++++++
 init/Kconfig | 29 +++++++++++++++++++++++++++--
 2 files changed, 35 insertions(+), 2 deletions(-)

diff --git a/Makefile b/Makefile
index 0ed7e061c8e9..f7bc940f0ff3 100644
--- a/Makefile
+++ b/Makefile
@@ -751,6 +751,14 @@ else ifdef CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3
 KBUILD_CFLAGS += -O3
 else ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
 KBUILD_CFLAGS += -Os
+else ifdef CONFIG_CC_NULL
+KBUILD_CFLAGS += -O0
+else ifdef CONFIG_CC_OPTIMIZE_BASAL
+KBUILD_CFLAGS += -O1
+else ifdef CONFIG_CC_DEBBUG
+KBUILD_CFLAGS += -Og
+else ifdef CONFIG_CC_AGRESSIVE
+KBUILD_CFLAGS += -Ofast
 endif
 
 # Tell gcc to never replace conditional load with a non-conditional one
diff --git a/init/Kconfig b/init/Kconfig
index 1ea12c64e4c9..99bf5f2fe0bf 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -1,4 +1,4 @@
-# SPDX-License-Identifier: GPL-2.0-only
+op# SPDX-License-Identifier: GPL-2.0-only
 config CC_VERSION_TEXT
 	string
 	default "$(CC_VERSION_TEXT)"
@@ -1324,6 +1324,17 @@ choice
 	prompt "Compiler optimization level"
 	default CC_OPTIMIZE_FOR_PERFORMANCE
 
+config CC_OPTIMIZE_NULL
+	bool "No optimization (-O0)"
+	help
+	  This level compiles the fastest and generates the most debuggable code.
+
+config CC_OPTIMIZE_BASAL
+	bool "Optimize for performance (-O1)"
+	help
+	  Choosing this option will pass "-O1" to your compiler resulting
+	  in basal optimization, possibly speeding up compilation.
+
 config CC_OPTIMIZE_FOR_PERFORMANCE
 	bool "Optimize for performance (-O2)"
 	help
@@ -1333,7 +1344,6 @@ config CC_OPTIMIZE_FOR_PERFORMANCE
 
 config CC_OPTIMIZE_FOR_PERFORMANCE_O3
 	bool "Optimize more for performance (-O3)"
-	depends on ARC
 	help
 	  Choosing this option will pass "-O3" to your compiler to optimize
 	  the kernel yet more for performance.
@@ -1344,6 +1354,21 @@ config CC_OPTIMIZE_FOR_SIZE
 	  Choosing this option will pass "-Os" to your compiler resulting
 	  in a smaller kernel.
 
+config CC_OPTIMIZE_DEBBUG
+	bool "Optimize debugging experience (-Og)"
+	help
+  	Like -O1. In future versions, this option might disable different
+		optimizations in order to improve debuggability.
+
+config CC_OPTIMIZE_AGRESSIVE
+	bool "Optimizations from -O3 along with other aggressive optimizations (-Ofast)"
+	help
+  	Disregard strict standards compliance. -Ofast enables all -O3 optimizations.
+		It also enables optimizations that are not valid for all standard-compliant
+		programs. It turns on -ffast-math, -fallow-store-data-races and the
+		Fortran-specific -fstack-arrays, unless -fmax-stack-var-size is
+		specified, and -fno-protect-parens.
+
 endchoice
 
 config HAVE_LD_DEAD_CODE_DATA_ELIMINATION
-- 
2.31.1

