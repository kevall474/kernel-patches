From 03b53253646a0e911c772ae193dd5a7b0a36fb76 Mon Sep 17 00:00:00 2001
From: kevall474 <kevall474@tuta.io>
Date: Sat, 12 Dec 2020 19:55:20 -0500
Subject: [PATCH] add more optimize flags

---
 init/Kconfig | 41 ++++++++++++++++++++++++++++++++++++++---
 1 file changed, 38 insertions(+), 3 deletions(-)

diff --git a/init/Kconfig b/init/Kconfig
index 2a5df1cf8..c725baa99 100644
--- a/init/Kconfig
+++ b/init/Kconfig
@@ -1296,9 +1296,28 @@ config BOOT_CONFIG
 
 choice
 	prompt "Compiler optimization level"
-	default CC_OPTIMIZE_FOR_PERFORMANCE
+	default CC_OPTIMIZE_FOR_PERFORMANCE_O2
 
-config CC_OPTIMIZE_FOR_PERFORMANCE
+config CC_OPTIMIZE_FOR_PERFORMANCE_O0
+	bool "Optimize for performance (-O0)"
+	help
+		Reduce compilation time and make debugging produce the expected results. This is the default.
+
+config CC_OPTIMIZE_FOR_PERFORMANCE_O
+	bool "Optimize for performance (-O)"
+	help
+		Optimize. Optimizing compilation takes somewhat more time, and a lot more memory for
+		a large function. With -O, the compiler tries to reduce code size and execution time,
+		without performing any optimizations that take a great deal of compilation time.
+
+config CC_OPTIMIZE_FOR_PERFORMANCE_O1
+	bool "Optimize for performance (-O1)"
+	help
+		Somewhere between -O0 and -O2. Optimize. Optimizing compilation takes somewhat more time,
+		and a lot more memory for a large function. With -O, the compiler tries to reduce code size
+		and execution time, without performing any optimizations that take a great deal of compilation time.
+
+config CC_OPTIMIZE_FOR_PERFORMANCE_O2
 	bool "Optimize for performance (-O2)"
 	help
 	  This is the default optimization level for the kernel, building
@@ -1307,7 +1326,6 @@ config CC_OPTIMIZE_FOR_PERFORMANCE
 
 config CC_OPTIMIZE_FOR_PERFORMANCE_O3
 	bool "Optimize more for performance (-O3)"
-	depends on ARC
 	help
 	  Choosing this option will pass "-O3" to your compiler to optimize
 	  the kernel yet more for performance.
@@ -1318,6 +1336,23 @@ config CC_OPTIMIZE_FOR_SIZE
 	  Choosing this option will pass "-Os" to your compiler resulting
 	  in a smaller kernel.
 
+config CC_OPTIMIZE_FOR_PERFORMANCE_Ofast
+	bool "Optimize more for performance (-Ofast)"
+	help
+		Disregard strict standards compliance. -Ofast enables all -O3 optimizations.
+		It also enables optimizations that are not valid for all standard-compliant programs.
+
+config CC_OPTIMIZE_FOR_DEBUGGING
+	bool "Optimize more for debugging (-Og)"
+	help
+		Optimize debugging experience. -Og should be the optimization level of choice for the
+		standard edit-compile-debug cycle, offering a reasonable level of optimization
+		while maintaining fast compilation and a good debugging experience. It is a better choice
+		than -O0 for producing debuggable code because some compiler passes that collect debug information
+		are disabled at -O0. Like -O0, -Og completely disables a number of optimization passes so that individual
+		options controlling them have no effect. Otherwise -Og enables all -O1 optimization flags except
+		for those that may interfere with debugging.
+
 endchoice
 
 config HAVE_LD_DEAD_CODE_DATA_ELIMINATION
-- 
2.29.2

